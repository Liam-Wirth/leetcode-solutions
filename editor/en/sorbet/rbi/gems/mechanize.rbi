# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/mechanize/all/mechanize.rbi
#
# mechanize-1.0.0

class Mechanize
  def add_to_history(page); end
  def auth(user, password); end
  def back; end
  def basic_auth(user, password); end
  def ca_file; end
  def ca_file=(arg0); end
  def cert; end
  def cert=(arg0); end
  def click(link); end
  def conditional_requests; end
  def conditional_requests=(arg0); end
  def cookie_jar; end
  def cookie_jar=(arg0); end
  def cookies; end
  def current_page; end
  def delete(url, query_params = nil, options = nil); end
  def fetch_page(params); end
  def follow_meta_refresh; end
  def follow_meta_refresh=(arg0); end
  def follow_redirect?; end
  def get(options, parameters = nil, referer = nil); end
  def get_file(url); end
  def gzip_enabled; end
  def gzip_enabled=(arg0); end
  def head(url, query_params = nil, options = nil); end
  def history; end
  def history_added; end
  def history_added=(arg0); end
  def html_parser; end
  def html_parser=(arg0); end
  def initialize; end
  def keep_alive; end
  def keep_alive=(arg0); end
  def keep_alive_time; end
  def keep_alive_time=(arg0); end
  def key; end
  def key=(arg0); end
  def log; end
  def log=(l); end
  def max_history; end
  def max_history=(length); end
  def open_timeout; end
  def open_timeout=(arg0); end
  def page; end
  def pass; end
  def pass=(arg0); end
  def pluggable_parser; end
  def post(url, query = nil, headers = nil); end
  def post_connect_hooks; end
  def post_form(url, form, headers = nil); end
  def pre_connect_hooks; end
  def proxy_addr; end
  def proxy_pass; end
  def proxy_port; end
  def proxy_user; end
  def put(url, entity, options = nil); end
  def read_timeout; end
  def read_timeout=(arg0); end
  def redirect_ok; end
  def redirect_ok=(arg0); end
  def redirection_limit; end
  def redirection_limit=(arg0); end
  def request_headers; end
  def request_headers=(arg0); end
  def request_with_entity(verb, url, entity, options = nil); end
  def resolve(url, referer = nil); end
  def scheme_handlers; end
  def scheme_handlers=(arg0); end
  def self.html_parser; end
  def self.html_parser=(arg0); end
  def self.inherited(child); end
  def self.log; end
  def self.log=(arg0); end
  def set_proxy(addr, port, user = nil, pass = nil); end
  def submit(form, button = nil, headers = nil); end
  def transact; end
  def user_agent; end
  def user_agent=(arg0); end
  def user_agent_alias=(al); end
  def verify_callback; end
  def verify_callback=(arg0); end
  def visited?(url); end
  def visited_page(url); end
  def watch_for_set; end
  def watch_for_set=(arg0); end
end
module WWW
  def self.const_missing(klass); end
end
